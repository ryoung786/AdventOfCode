name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

defaults:
  run:
    shell: bash

jobs:
  test-site:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: site
    strategy:
      matrix:
        otp: [22.3]
        elixir: [1.11.2]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - uses: actions/cache@v1
        id: deps-cache
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - uses: actions/cache@v1
        id: build-cache
        with:
          path: _build
          key: ${{ runner.os }}-build-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - run: mix deps.get
      - run: mix format --check-formatted
      - run: mix test

  test-2019:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 2019/elixir
    strategy:
      matrix:
        otp: [22.3]
        elixir: [1.11.2]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - uses: actions/cache@v1
        id: deps-cache
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - uses: actions/cache@v1
        id: build-cache
        with:
          path: _build
          key: ${{ runner.os }}-build-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - run: mix deps.get
      - run: mix format --check-formatted
      - run: mix test

  test-2020:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 2020
    strategy:
      matrix:
        otp: [22.3]
        elixir: [1.11.2]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - uses: actions/cache@v1
        id: deps-cache
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - uses: actions/cache@v1
        id: build-cache
        with:
          path: _build
          key: ${{ runner.os }}-build-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - run: mix deps.get
      - run: mix format --check-formatted
      - run: mix test

  deploy:
    needs: test # Will only run if the test job succeeds
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: main # Checkout out main instead of the latest commit
          fetch-depth: 0 # Checkout the whole branch

      - uses: akhileshns/heroku-deploy@v3.6.8 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "advent-of-code-ryoung" #Must be unique in Heroku
          heroku_email: "${{secrets.HEROKU_EMAIL}}"
          buildpack: "https://github.com/HashNuke/heroku-buildpack-elixir.git"
          appdir: site
